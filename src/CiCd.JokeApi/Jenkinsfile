pipeline {
    agent any

    environment {
        DOTNET_VERSION = '8.0' // Set this to the version of .NET you're using
    }

    tools {
        // Correct tool type for .NET SDK
        dotnetsdk "${DOTNET_VERSION}"
    }

    stages {
        stage('Checkout') {
            steps {
                // Pull the latest code from your Git repository
                git branch: 'master', url: 'https://github.com/lennardclaproth/dotnet-playground'
            }
        }

        stage('Restore') {
            steps {
                // Restore dependencies
                sh 'dotnet restore'
            }
        }

        stage('Build') {
            steps {
                // Build the project
                sh 'dotnet build --configuration Release --no-restore'
            }
        }

        stage('Test') {
            steps {
                // Run unit tests and integration tests
                sh 'dotnet test --no-restore --verbosity normal'
            }
        }

        stage('Publish') {
            steps {
                // Optionally publish build artifacts (e.g., for deployment purposes)
                sh 'dotnet publish --configuration Release --no-build -o ./publish'
            }
        }
    }

    post {
        always {
            // Ensure cleanWs() is inside a node block
            node {
                cleanWs() // Clean workspace after the job is done
            }
        }
        failure {
            echo "The build has failed!"
        }
    }
}
